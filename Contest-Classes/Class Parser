#include <bits/stdc++.h>

using namespace std;

class Reader
{
public:

    Reader( FILE *_stream, const int _size = ( 1 << 20 ) )
    {
        stream = _stream;
        buffer = new char[_size];
        size = _size;
        pointer = 0;

        fread( buffer, size, 1, stream );
    }

    template <class T>
    T nextValue()
    {
        T value = 0;
        bool negative = false;

        while ( !isdigit( buffer[pointer] ) )
                nextPosition();

        if ( buffer[pointer] == '-' )
        {
            negative = true;
            nextPosition();
        }

        while ( isdigit( buffer[pointer] ) )
        {
            value = value * 10 + buffer[pointer] - '0';
            nextPosition();
        }

        if ( negative )
            value = -value;

        return value;
    }

    template <class T>
    Reader& operator >> ( T &value )
    {
        value = nextValue<T>();
        return *this;
    }

private:

    void nextPosition()
    {
        if ( ++pointer == size )
        {
            fread( buffer, size, 1, stream );
            pointer = 0;
        }
    }

    char *buffer;
    FILE *stream;
    int pointer, size;
};

int main()
{
    return 0;
}
